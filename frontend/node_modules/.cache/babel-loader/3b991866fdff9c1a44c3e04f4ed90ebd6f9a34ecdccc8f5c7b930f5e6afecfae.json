{"ast":null,"code":"var _jsxFileName = \"E:\\\\webdev practice\\\\some react projects\\\\Redux\\\\5.adv-starting-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport HomePage from './pages/Home';\nimport EventsPage from './pages/Event';\nimport EventDetailPage from './pages/eventDetail';\nimport NewEventPage from './pages/NewEvent';\nimport EditEventPage from './pages/EditEvent';\nimport RootLayout from './pages/Root';\nimport EventsRootLayout from './pages/EventsRoot';\nimport { loader as eventLoader } from './pages/Event';\nimport ErrorPage from './pages/Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 31\n    }, this)\n  }, {\n    path: 'events',\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 22\n      }, this),\n      loader: eventLoader\n    }, {\n      path: ':eventId',\n      element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 40\n      }, this),\n      loader\n    }, {\n      path: 'new',\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 34\n      }, this)\n    }, {\n      path: ':eventId/edit',\n      element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 45\n      }, this)\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","HomePage","EventsPage","EventDetailPage","NewEventPage","EditEventPage","RootLayout","EventsRootLayout","loader","eventLoader","ErrorPage","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","App","_c","$RefreshReg$"],"sources":["E:/webdev practice/some react projects/Redux/5.adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\r\n\r\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\r\n//    - HomePage\r\n//    - EventsPage\r\n//    - EventDetailPage\r\n//    - NewEventPage\r\n//    - EditEventPage\r\n// 2. Add routing & route definitions for these five pages\r\n//    - / => HomePage\r\n//    - /events => EventsPage\r\n//    - /events/<some-id> => EventDetailPage\r\n//    - /events/new => NewEventPage\r\n//    - /events/<some-id>/edit => EditEventPage\r\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\r\n// 4. Add properly working links to the MainNavigation\r\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\r\n// 6. Output a list of dummy events to the EventsPage\r\n//    Every list item should include a link to the respective EventDetailPage\r\n// 7. Output the ID of the selected event on the EventDetailPage\r\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\r\n\r\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\r\nimport HomePage from './pages/Home';\r\nimport EventsPage from './pages/Event';\r\nimport EventDetailPage from './pages/eventDetail';\r\nimport NewEventPage from './pages/NewEvent';\r\nimport EditEventPage from './pages/EditEvent';\r\nimport RootLayout from './pages/Root';\r\nimport EventsRootLayout from './pages/EventsRoot';\r\nimport { loader as eventLoader } from './pages/Event';\r\nimport ErrorPage from './pages/Error';\r\n\r\nconst router = createBrowserRouter([\r\n  { path: '/',\r\n    element: <RootLayout />,\r\n    errorElement: <ErrorPage />,\r\n    children: [\r\n      { index: true, element: <HomePage></HomePage>},\r\n      { path: 'events',\r\n        element:<EventsRootLayout />,\r\n        children: [\r\n          { index: true,\r\n            element: <EventsPage />,\r\n            loader: eventLoader,\r\n          },\r\n          { path: ':eventId', element: <EventDetailPage/>,loader},\r\n          { path: 'new', element:<NewEventPage />},\r\n          { path: ':eventId/edit', element: <EditEventPage />},\r\n        ]\r\n      },\r\n    ],\r\n  },\r\n])\r\n\r\nfunction App() {\r\n  return <RouterProvider router={router} />;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,eAAe,MAAM,qBAAqB;AACjD,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,aAAa,MAAM,mBAAmB;AAC7C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,SAASC,MAAM,IAAIC,WAAW,QAAQ,eAAe;AACrD,OAAOC,SAAS,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGb,mBAAmB,CAAC,CACjC;EAAEc,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACN,UAAU;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACvBC,YAAY,eAAER,OAAA,CAACF,SAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC3BE,QAAQ,EAAE,CACR;IAAEC,KAAK,EAAE,IAAI;IAAEP,OAAO,eAAEH,OAAA,CAACX,QAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW;EAAC,CAAC,EAC9C;IAAEL,IAAI,EAAE,QAAQ;IACdC,OAAO,eAACH,OAAA,CAACL,gBAAgB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC5BE,QAAQ,EAAE,CACR;MAAEC,KAAK,EAAE,IAAI;MACXP,OAAO,eAAEH,OAAA,CAACV,UAAU;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACvBX,MAAM,EAAEC;IACV,CAAC,EACD;MAAEK,IAAI,EAAE,UAAU;MAAEC,OAAO,eAAEH,OAAA,CAACT,eAAe;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;MAACX;IAAM,CAAC,EACvD;MAAEM,IAAI,EAAE,KAAK;MAAEC,OAAO,eAACH,OAAA,CAACR,YAAY;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,CAAC,EACxC;MAAEL,IAAI,EAAE,eAAe;MAAEC,OAAO,eAAEH,OAAA,CAACP,aAAa;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,CAAC;EAExD,CAAC;AAEL,CAAC,CACF,CAAC;AAEF,SAASI,GAAGA,CAAA,EAAG;EACb,oBAAOX,OAAA,CAACb,cAAc;IAACc,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACK,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}