{"ast":null,"code":"var _jsxFileName = \"E:\\\\webdev practice\\\\some react projects\\\\Redux\\\\5.adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Event.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.'}),{status:500});\n    return json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","status","$RefreshReg$"],"sources":["E:/webdev practice/some react projects/Redux/5.adv-starting-project/frontend/src/pages/Event.js"],"sourcesContent":["import { useLoaderData , json} from 'react-router-dom';\r\n\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n  const data = useLoaderData();\r\n  const events = data.events;\r\n\r\n  if (data.isError) {\r\n    return(\r\n      <>\r\n        <p>{data.message}</p>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      <EventsList events={events} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader() {\r\n  const response = await fetch('http://localhost:8080/events');\r\n  if(!response.ok){\r\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.'}),{status:500});\r\n    return json({ message:'Could not fetch events.'},{ status: 500});\r\n  }else{\r\n    return response;\r\n  }\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAGC,IAAI,QAAO,kBAAkB;AAEtD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGT,aAAa,CAAC,CAAC;EAC5B,MAAMU,MAAM,GAAGD,IAAI,CAACC,MAAM;EAE1B,IAAID,IAAI,CAACE,OAAO,EAAE;IAChB,oBACEP,OAAA,CAAAE,SAAA;MAAAM,QAAA,eACER,OAAA;QAAAQ,QAAA,EAAIH,IAAI,CAACI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC,gBACrB,CAAC;EAEP;EAEA,oBACEb,OAAA,CAAAE,SAAA;IAAAM,QAAA,eAEER,OAAA,CAACF,UAAU;MAACQ,MAAM,EAAEA;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC9B,CAAC;AAEP;AAACT,EAAA,CAlBQD,UAAU;EAAA,QACJP,aAAa;AAAA;AAAAkB,EAAA,GADnBX,UAAU;AAoBnB,eAAeA,UAAU;AAEzB,OAAO,eAAeY,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;IACd;IACA,OAAOrB,IAAI,CAAC;MAAEY,OAAO,EAAC;IAAyB,CAAC,EAAC;MAAEU,MAAM,EAAE;IAAG,CAAC,CAAC;EAClE,CAAC,MAAI;IACH,OAAOH,QAAQ;EACjB;AACF;AAAC,IAAAF,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}